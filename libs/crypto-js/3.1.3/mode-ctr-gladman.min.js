!function(e,r,i){"object"==typeof exports?module.exports=exports=r(require("./core.min"),require("./cipher-core.min")):"function"==typeof define&&define.amd?define(["./core.min","./cipher-core.min"],r):r()}(this,function(e){return e.mode.CTRGladman=function(){function r(e){if(255===(e>>24&255)){var r=e>>16&255,i=e>>8&255,n=255&e;255===r?(r=0,255===i?(i=0,255===n?n=0:++n):++i):++r,e=0,e+=r<<16,e+=i<<8,e+=n}else e+=1<<24;return e}function i(e){return 0===(e[0]=r(e[0]))&&(e[1]=r(e[1])),e}var n=e.lib.BlockCipherMode.extend(),o=n.Encryptor=n.extend({processBlock:function(e,r){var n=this._cipher,o=n.blockSize,t=this._iv,c=this._counter;t&&(c=this._counter=t.slice(0),this._iv=void 0),i(c);var u=c.slice(0);n.encryptBlock(u,0);for(var f=0;f<o;f++)e[r+f]^=u[f]}});return n.Decryptor=o,n}(),e.mode.CTRGladman});
//# sourceMappingURL=mode-ctr-gladman.min.js.map